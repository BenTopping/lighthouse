name: CI python

on:
  push:
    paths-ignore:
      - "README.md"
    branches:
      - gpl769_use_cherrypicked_view

env: 
  UNIFIED_WAREHOUSE_IMAGE: docker.pkg.github.com/sanger/event_warehouse/unified_warehouse:GPL-769-cherrypicked-samples-view-revisited
  EVENT_WAREHOUSE_IMAGE: docker.pkg.github.com/sanger/event_warehouse/event_warehouse:gpl769_test_cp_view
jobs:
  test_job:
    runs-on: ubuntu-18.04
    services:
      mongodb:
        image: mongo:4.2.5
        ports:
          - 27017:27017
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: null
          MYSQL_DATABASE: unified_warehouse_test
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
          - 1433:1433
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: MyS3cr3tPassw0rd
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - name: Install dependencies
        run: |
          pipenv install --dev --ignore-pipfile --system --deploy
      - name: Check format with black
        run: |
          # stop the build if there are black formatting errors
          python -m black --check .
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8
      - name: Run mypy
        run: |
          python -m mypy .
      - name: Create SQL Server testing database
        run: |
          python setup_sqlserver_test_db.py

      - name: Login to registry
        run: >-
          docker login
          -u ${{ github.actor }}
          -p ${{ secrets.GITHUB_TOKEN }}
          docker.pkg.github.com
      - name: Pull Event warehouse image
        run: >- 
          docker pull ${EVENT_WAREHOUSE_IMAGE}
      - name: Initialize Event warehouse testing database
        run: >-
          docker run --network host --env DBHOST=127.0.0.1 --env RAILS_ENV=test
          -v ${GITHUB_WORKSPACE}/spec/data/test_event_wh_seed.rb:/code/db/seed.rb
          ${EVENT_WAREHOUSE_IMAGE}
          bundle exec rake db:setup db:seed
      - name: Seed Event warehouse testing database
        run: >-
          docker run --network host --env DBHOST=127.0.0.1 --env RAILS_ENV=test
          ${EVENT_WAREHOUSE_IMAGE}
          bundle exec rails runner /code/spec/data/integration/seed_for_unified_wh.rb
      - name: Create the views
        run: >-
          docker run --network host --env DBHOST=127.0.0.1 --env RAILS_ENV=test
          docker.pkg.github.com/${UNIFIED_WAREHOUSE_IMAGE}:${GITHUB_REF##*/} 
          bundle exec rake db:views:schema:load
      #- name: Setup the test MLWH and Events databases
      #  run: |
      #    python setup_test_db.py
      - name: Test with pytest
        run: |
          python -m pytest -x
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
